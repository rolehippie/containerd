---
- name: Create required dirs
  loop:
    - /etc/containerd
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx
  tags:
    - containerd

- name: Download repo key
  when: containerd_upstream_version | default(True)
  ansible.builtin.shell:
    cmd: "curl -sSL 'https://download.docker.com/linux/ubuntu/gpg' | gpg --dearmor --output {{ containerd_keyring }}"
    creates: "{{ containerd_keyring }}"
  tags:
    - containerd

- name: Add apt repository
  when: containerd_upstream_version | default(True)
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ containerd_upstream_arch }} signed-by={{ containerd_keyring }}] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    filename: containerd
    update_cache: True
    state: present
  tags:
    - containerd

- name: Pin package version
  when: containerd_fixed_version | default(False)
  ansible.builtin.copy:
    content: |
      Explantion: Pin added by containerd role
      Package: {{ 'containerd.io' if containerd_upstream_version else 'containerd' }}
      Pin: version {{ containerd_fixed_version }}
      Pin-Priority: 1000
    dest: /etc/apt/preferences.d/containerd
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - containerd

- name: Fact containerd package
  ansible.builtin.set_fact:
    containerd_package_name: "{{ 'containerd.io' if containerd_upstream_version | default(True) else 'containerd' }}"
  tags:
    - containerd

- name: Install required packages
  loop:
    - "{{ containerd_package_name }}{{ '=' + containerd_fixed_version if containerd_fixed_version | default(False) else '' }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - containerd

- name: Write general config
  when: not containerd_skip_config
  notify:
    - Restart containerd
  ansible.builtin.template:
    src: config.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - containerd

- name: Start containerd service
  when: not containerd_skip_service
  ansible.builtin.systemd:
    name: containerd
    state: started
    daemon_reload: True
    masked: False
    enabled: True
  tags:
    - containerd

...
